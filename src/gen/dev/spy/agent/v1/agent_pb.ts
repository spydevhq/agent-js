// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=js"
// @generated from file dev/spy/agent/v1/agent.proto (package dev.spy.agent.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { SourceTree } from "../../shared/v1/shared_pb.js";
import { file_dev_spy_shared_v1_shared } from "../../shared/v1/shared_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dev/spy/agent/v1/agent.proto.
 */
export const file_dev_spy_agent_v1_agent: GenFile = /*@__PURE__*/
  fileDesc("ChxkZXYvc3B5L2FnZW50L3YxL2FnZW50LnByb3RvEhBkZXYuc3B5LmFnZW50LnYxIksKEkluaXRTZXNzaW9uUmVxdWVzdBIQCghhcHBfbmFtZRgBIAEoCRIVCg1hZ2VudF92ZXJzaW9uGAIgASgJEgwKBGFyZ3YYAyADKAkiKQoTSW5pdFNlc3Npb25SZXNwb25zZRISCgpzZXNzaW9uX2lkGAEgASgJIsMBChVDb21tYW5kU3RyZWFtUmVzcG9uc2USEgoKcmVxdWVzdF9pZBgBIAEoCRJCCg9nZXRfc291cmNlX3RyZWUYAiABKAsyJy5kZXYuc3B5LmFnZW50LnYxLkdldFNvdXJjZVRyZWVSZXNwb25zZUgAEkYKEWdldF9zY3JpcHRfc291cmNlGAMgASgLMikuZGV2LnNweS5hZ2VudC52MS5HZXRTY3JpcHRTb3VyY2VSZXNwb25zZUgAQgoKCHJlc3BvbnNlIr8BChRDb21tYW5kU3RyZWFtUmVxdWVzdBISCgpyZXF1ZXN0X2lkGAEgASgJEkEKD2dldF9zb3VyY2VfdHJlZRgCIAEoCzImLmRldi5zcHkuYWdlbnQudjEuR2V0U291cmNlVHJlZVJlcXVlc3RIABJFChFnZXRfc2NyaXB0X3NvdXJjZRgDIAEoCzIoLmRldi5zcHkuYWdlbnQudjEuR2V0U2NyaXB0U291cmNlUmVxdWVzdEgAQgkKB3JlcXVlc3QiFgoUR2V0U291cmNlVHJlZVJlcXVlc3QiRAoVR2V0U291cmNlVHJlZVJlc3BvbnNlEisKBHRyZWUYASABKAsyHS5kZXYuc3B5LnNoYXJlZC52MS5Tb3VyY2VUcmVlIisKFkdldFNjcmlwdFNvdXJjZVJlcXVlc3QSEQoJc2NyaXB0X2lkGAIgASgJIikKF0dldFNjcmlwdFNvdXJjZVJlc3BvbnNlEg4KBnNvdXJjZRgBIAEoCSJBChNMb2dwb2ludEhpdHNSZXF1ZXN0EioKA2hpdBgBIAEoCzIdLmRldi5zcHkuYWdlbnQudjEuTG9ncG9pbnRIaXQiFgoUTG9ncG9pbnRIaXRzUmVzcG9uc2UiRQoSQWRkTG9ncG9pbnRSZXF1ZXN0EhEKCXNjcmlwdF9pZBgCIAEoCRIMCgRsaW5lGAMgASgFEg4KBmFjdGl2ZRgEIAEoCCJhChNBZGRMb2dwb2ludFJlc3BvbnNlEhUKDWJyZWFrcG9pbnRfaWQYASABKAkSMwoPYWN0dWFsX2xvY2F0aW9uGAIgASgLMhouZGV2LnNweS5hZ2VudC52MS5Mb2NhdGlvbiIuChVSZW1vdmVMb2dwb2ludFJlcXVlc3QSFQoNYnJlYWtwb2ludF9pZBgBIAEoCSIYChZSZW1vdmVMb2dwb2ludFJlc3BvbnNlIhsKGVNjcmlwdFBhcnNlZEV2ZW50RGF0YVR5cGUiBwoFVHJhY2UiDQoLTG9ncG9pbnRIaXQiSQoITG9jYXRpb24SEQoJc2NyaXB0X2lkGAEgASgJEhMKC2xpbmVfbnVtYmVyGAIgASgFEhUKDWNvbHVtbl9udW1iZXIYAyABKAUyuQIKDkJhY2tlbmRTZXJ2aWNlElwKC0luaXRTZXNzaW9uEiQuZGV2LnNweS5hZ2VudC52MS5Jbml0U2Vzc2lvblJlcXVlc3QaJS5kZXYuc3B5LmFnZW50LnYxLkluaXRTZXNzaW9uUmVzcG9uc2UiABJhCgxMb2dwb2ludEhpdHMSJS5kZXYuc3B5LmFnZW50LnYxLkxvZ3BvaW50SGl0c1JlcXVlc3QaJi5kZXYuc3B5LmFnZW50LnYxLkxvZ3BvaW50SGl0c1Jlc3BvbnNlIgAoARJmCg1Db21tYW5kU3RyZWFtEicuZGV2LnNweS5hZ2VudC52MS5Db21tYW5kU3RyZWFtUmVzcG9uc2UaJi5kZXYuc3B5LmFnZW50LnYxLkNvbW1hbmRTdHJlYW1SZXF1ZXN0IgAoATABMtwBCgxBZ2VudFNlcnZpY2USYgoNR2V0U291cmNlVHJlZRImLmRldi5zcHkuYWdlbnQudjEuR2V0U291cmNlVHJlZVJlcXVlc3QaJy5kZXYuc3B5LmFnZW50LnYxLkdldFNvdXJjZVRyZWVSZXNwb25zZSIAEmgKD0dldFNjcmlwdFNvdXJjZRIoLmRldi5zcHkuYWdlbnQudjEuR2V0U2NyaXB0U291cmNlUmVxdWVzdBopLmRldi5zcHkuYWdlbnQudjEuR2V0U2NyaXB0U291cmNlUmVzcG9uc2UiAGIGcHJvdG8z", [file_dev_spy_shared_v1_shared]);

/**
 * @generated from message dev.spy.agent.v1.InitSessionRequest
 */
export type InitSessionRequest = Message<"dev.spy.agent.v1.InitSessionRequest"> & {
  /**
   * @generated from field: string app_name = 1;
   */
  appName: string;

  /**
   * @generated from field: string agent_version = 2;
   */
  agentVersion: string;

  /**
   * @generated from field: repeated string argv = 3;
   */
  argv: string[];
};

/**
 * Describes the message dev.spy.agent.v1.InitSessionRequest.
 * Use `create(InitSessionRequestSchema)` to create a new message.
 */
export const InitSessionRequestSchema: GenMessage<InitSessionRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 0);

/**
 * @generated from message dev.spy.agent.v1.InitSessionResponse
 */
export type InitSessionResponse = Message<"dev.spy.agent.v1.InitSessionResponse"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;
};

/**
 * Describes the message dev.spy.agent.v1.InitSessionResponse.
 * Use `create(InitSessionResponseSchema)` to create a new message.
 */
export const InitSessionResponseSchema: GenMessage<InitSessionResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 1);

/**
 * client --> server responses
 *
 * @generated from message dev.spy.agent.v1.CommandStreamResponse
 */
export type CommandStreamResponse = Message<"dev.spy.agent.v1.CommandStreamResponse"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * @generated from oneof dev.spy.agent.v1.CommandStreamResponse.response
   */
  response: {
    /**
     * @generated from field: dev.spy.agent.v1.GetSourceTreeResponse get_source_tree = 2;
     */
    value: GetSourceTreeResponse;
    case: "getSourceTree";
  } | {
    /**
     * StreamLogpointHitsRequest stream_logpoint_hits = 4;
     * AddLogpointRequest add_logpoint = 5;
     * RemoveLogpointRequest remove_logpoint = 6;
     *
     * @generated from field: dev.spy.agent.v1.GetScriptSourceResponse get_script_source = 3;
     */
    value: GetScriptSourceResponse;
    case: "getScriptSource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dev.spy.agent.v1.CommandStreamResponse.
 * Use `create(CommandStreamResponseSchema)` to create a new message.
 */
export const CommandStreamResponseSchema: GenMessage<CommandStreamResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 2);

/**
 * server --> client requests
 *
 * @generated from message dev.spy.agent.v1.CommandStreamRequest
 */
export type CommandStreamRequest = Message<"dev.spy.agent.v1.CommandStreamRequest"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * @generated from oneof dev.spy.agent.v1.CommandStreamRequest.request
   */
  request: {
    /**
     * @generated from field: dev.spy.agent.v1.GetSourceTreeRequest get_source_tree = 2;
     */
    value: GetSourceTreeRequest;
    case: "getSourceTree";
  } | {
    /**
     * StreamLogpointHitsResponse stream_logpoint_hits = 4;
     * AddLogpointResponse add_logpoint = 5;
     * RemoveLogpointResponse remove_logpoint = 6;
     *
     * @generated from field: dev.spy.agent.v1.GetScriptSourceRequest get_script_source = 3;
     */
    value: GetScriptSourceRequest;
    case: "getScriptSource";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dev.spy.agent.v1.CommandStreamRequest.
 * Use `create(CommandStreamRequestSchema)` to create a new message.
 */
export const CommandStreamRequestSchema: GenMessage<CommandStreamRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 3);

/**
 * @generated from message dev.spy.agent.v1.GetSourceTreeRequest
 */
export type GetSourceTreeRequest = Message<"dev.spy.agent.v1.GetSourceTreeRequest"> & {
};

/**
 * Describes the message dev.spy.agent.v1.GetSourceTreeRequest.
 * Use `create(GetSourceTreeRequestSchema)` to create a new message.
 */
export const GetSourceTreeRequestSchema: GenMessage<GetSourceTreeRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 4);

/**
 * @generated from message dev.spy.agent.v1.GetSourceTreeResponse
 */
export type GetSourceTreeResponse = Message<"dev.spy.agent.v1.GetSourceTreeResponse"> & {
  /**
   * @generated from field: dev.spy.shared.v1.SourceTree tree = 1;
   */
  tree?: SourceTree;
};

/**
 * Describes the message dev.spy.agent.v1.GetSourceTreeResponse.
 * Use `create(GetSourceTreeResponseSchema)` to create a new message.
 */
export const GetSourceTreeResponseSchema: GenMessage<GetSourceTreeResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 5);

/**
 * @generated from message dev.spy.agent.v1.GetScriptSourceRequest
 */
export type GetScriptSourceRequest = Message<"dev.spy.agent.v1.GetScriptSourceRequest"> & {
  /**
   * @generated from field: string script_id = 2;
   */
  scriptId: string;
};

/**
 * Describes the message dev.spy.agent.v1.GetScriptSourceRequest.
 * Use `create(GetScriptSourceRequestSchema)` to create a new message.
 */
export const GetScriptSourceRequestSchema: GenMessage<GetScriptSourceRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 6);

/**
 * @generated from message dev.spy.agent.v1.GetScriptSourceResponse
 */
export type GetScriptSourceResponse = Message<"dev.spy.agent.v1.GetScriptSourceResponse"> & {
  /**
   * @generated from field: string source = 1;
   */
  source: string;
};

/**
 * Describes the message dev.spy.agent.v1.GetScriptSourceResponse.
 * Use `create(GetScriptSourceResponseSchema)` to create a new message.
 */
export const GetScriptSourceResponseSchema: GenMessage<GetScriptSourceResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 7);

/**
 * @generated from message dev.spy.agent.v1.LogpointHitsRequest
 */
export type LogpointHitsRequest = Message<"dev.spy.agent.v1.LogpointHitsRequest"> & {
  /**
   * @generated from field: dev.spy.agent.v1.LogpointHit hit = 1;
   */
  hit?: LogpointHit;
};

/**
 * Describes the message dev.spy.agent.v1.LogpointHitsRequest.
 * Use `create(LogpointHitsRequestSchema)` to create a new message.
 */
export const LogpointHitsRequestSchema: GenMessage<LogpointHitsRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 8);

/**
 * @generated from message dev.spy.agent.v1.LogpointHitsResponse
 */
export type LogpointHitsResponse = Message<"dev.spy.agent.v1.LogpointHitsResponse"> & {
};

/**
 * Describes the message dev.spy.agent.v1.LogpointHitsResponse.
 * Use `create(LogpointHitsResponseSchema)` to create a new message.
 */
export const LogpointHitsResponseSchema: GenMessage<LogpointHitsResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 9);

/**
 * @generated from message dev.spy.agent.v1.AddLogpointRequest
 */
export type AddLogpointRequest = Message<"dev.spy.agent.v1.AddLogpointRequest"> & {
  /**
   * @generated from field: string script_id = 2;
   */
  scriptId: string;

  /**
   * @generated from field: int32 line = 3;
   */
  line: number;

  /**
   * @generated from field: bool active = 4;
   */
  active: boolean;
};

/**
 * Describes the message dev.spy.agent.v1.AddLogpointRequest.
 * Use `create(AddLogpointRequestSchema)` to create a new message.
 */
export const AddLogpointRequestSchema: GenMessage<AddLogpointRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 10);

/**
 * @generated from message dev.spy.agent.v1.AddLogpointResponse
 */
export type AddLogpointResponse = Message<"dev.spy.agent.v1.AddLogpointResponse"> & {
  /**
   * @generated from field: string breakpoint_id = 1;
   */
  breakpointId: string;

  /**
   * @generated from field: dev.spy.agent.v1.Location actual_location = 2;
   */
  actualLocation?: Location;
};

/**
 * Describes the message dev.spy.agent.v1.AddLogpointResponse.
 * Use `create(AddLogpointResponseSchema)` to create a new message.
 */
export const AddLogpointResponseSchema: GenMessage<AddLogpointResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 11);

/**
 * @generated from message dev.spy.agent.v1.RemoveLogpointRequest
 */
export type RemoveLogpointRequest = Message<"dev.spy.agent.v1.RemoveLogpointRequest"> & {
  /**
   * @generated from field: string breakpoint_id = 1;
   */
  breakpointId: string;
};

/**
 * Describes the message dev.spy.agent.v1.RemoveLogpointRequest.
 * Use `create(RemoveLogpointRequestSchema)` to create a new message.
 */
export const RemoveLogpointRequestSchema: GenMessage<RemoveLogpointRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 12);

/**
 * @generated from message dev.spy.agent.v1.RemoveLogpointResponse
 */
export type RemoveLogpointResponse = Message<"dev.spy.agent.v1.RemoveLogpointResponse"> & {
};

/**
 * Describes the message dev.spy.agent.v1.RemoveLogpointResponse.
 * Use `create(RemoveLogpointResponseSchema)` to create a new message.
 */
export const RemoveLogpointResponseSchema: GenMessage<RemoveLogpointResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 13);

/**
 * Define fields as per your requirements
 *
 * @generated from message dev.spy.agent.v1.ScriptParsedEventDataType
 */
export type ScriptParsedEventDataType = Message<"dev.spy.agent.v1.ScriptParsedEventDataType"> & {
};

/**
 * Describes the message dev.spy.agent.v1.ScriptParsedEventDataType.
 * Use `create(ScriptParsedEventDataTypeSchema)` to create a new message.
 */
export const ScriptParsedEventDataTypeSchema: GenMessage<ScriptParsedEventDataType> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 14);

/**
 * Define fields as per your requirements
 *
 * @generated from message dev.spy.agent.v1.Trace
 */
export type Trace = Message<"dev.spy.agent.v1.Trace"> & {
};

/**
 * Describes the message dev.spy.agent.v1.Trace.
 * Use `create(TraceSchema)` to create a new message.
 */
export const TraceSchema: GenMessage<Trace> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 15);

/**
 * Define fields as per your requirements
 *
 * @generated from message dev.spy.agent.v1.LogpointHit
 */
export type LogpointHit = Message<"dev.spy.agent.v1.LogpointHit"> & {
};

/**
 * Describes the message dev.spy.agent.v1.LogpointHit.
 * Use `create(LogpointHitSchema)` to create a new message.
 */
export const LogpointHitSchema: GenMessage<LogpointHit> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 16);

/**
 * @generated from message dev.spy.agent.v1.Location
 */
export type Location = Message<"dev.spy.agent.v1.Location"> & {
  /**
   * @generated from field: string script_id = 1;
   */
  scriptId: string;

  /**
   * @generated from field: int32 line_number = 2;
   */
  lineNumber: number;

  /**
   * @generated from field: int32 column_number = 3;
   */
  columnNumber: number;
};

/**
 * Describes the message dev.spy.agent.v1.Location.
 * Use `create(LocationSchema)` to create a new message.
 */
export const LocationSchema: GenMessage<Location> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 17);

/**
 * TODO: maybe all requests should run over the command stream?
 *
 * @generated from service dev.spy.agent.v1.BackendService
 */
export const BackendService: GenService<{
  /**
   * client to server requests  
   *
   * @generated from rpc dev.spy.agent.v1.BackendService.InitSession
   */
  initSession: {
    methodKind: "unary";
    input: typeof InitSessionRequestSchema;
    output: typeof InitSessionResponseSchema;
  },
  /**
   * @generated from rpc dev.spy.agent.v1.BackendService.LogpointHits
   */
  logpointHits: {
    methodKind: "client_streaming";
    input: typeof LogpointHitsRequestSchema;
    output: typeof LogpointHitsResponseSchema;
  },
  /**
   * server to client requests
   * buf:lint:ignore RPC_REQUEST_STANDARD_NAME
   * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
   *
   * @generated from rpc dev.spy.agent.v1.BackendService.CommandStream
   */
  commandStream: {
    methodKind: "bidi_streaming";
    input: typeof CommandStreamResponseSchema;
    output: typeof CommandStreamRequestSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dev_spy_agent_v1_agent, 0);

/**
 * This is only used for typescript definitions. The messages are actually sent
 * over the CommandStream.  This needs to be implemented by the agent.
 *
 * @generated from service dev.spy.agent.v1.AgentService
 */
export const AgentService: GenService<{
  /**
   * rpc GetAgentInfo(GetAgentInfoRequest) returns (GetAgentInfoResponse) {}
   *
   * @generated from rpc dev.spy.agent.v1.AgentService.GetSourceTree
   */
  getSourceTree: {
    methodKind: "unary";
    input: typeof GetSourceTreeRequestSchema;
    output: typeof GetSourceTreeResponseSchema;
  },
  /**
   * @generated from rpc dev.spy.agent.v1.AgentService.GetScriptSource
   */
  getScriptSource: {
    methodKind: "unary";
    input: typeof GetScriptSourceRequestSchema;
    output: typeof GetScriptSourceResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dev_spy_agent_v1_agent, 1);

