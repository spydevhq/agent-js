// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=js"
// @generated from file dev/spy/agent/v1/agent.proto (package dev.spy.agent.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Location, LogpointHit, SourceFile } from "../../shared/v1/shared_pb.js";
import { file_dev_spy_shared_v1_shared } from "../../shared/v1/shared_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dev/spy/agent/v1/agent.proto.
 */
export const file_dev_spy_agent_v1_agent: GenFile = /*@__PURE__*/
  fileDesc("ChxkZXYvc3B5L2FnZW50L3YxL2FnZW50LnByb3RvEhBkZXYuc3B5LmFnZW50LnYxIksKEkluaXRTZXNzaW9uUmVxdWVzdBIQCghhcHBfbmFtZRgBIAEoCRIVCg1hZ2VudF92ZXJzaW9uGAIgASgJEgwKBGFyZ3YYAyADKAkiKQoTSW5pdFNlc3Npb25SZXNwb25zZRISCgpzZXNzaW9uX2lkGAEgASgJIpgDChVDb21tYW5kU3RyZWFtUmVzcG9uc2USEgoKcmVxdWVzdF9pZBgBIAEoCRI7CgtnZXRfc291cmNlcxgCIAEoCzIkLmRldi5zcHkuYWdlbnQudjEuR2V0U291cmNlc1Jlc3BvbnNlSAASRgoRZ2V0X3NjcmlwdF9zb3VyY2UYAyABKAsyKS5kZXYuc3B5LmFnZW50LnYxLkdldFNjcmlwdFNvdXJjZVJlc3BvbnNlSAASPQoMYWRkX2xvZ3BvaW50GAQgASgLMiUuZGV2LnNweS5hZ2VudC52MS5BZGRMb2dwb2ludFJlc3BvbnNlSAASQwoPcmVtb3ZlX2xvZ3BvaW50GAYgASgLMiguZGV2LnNweS5hZ2VudC52MS5SZW1vdmVMb2dwb2ludFJlc3BvbnNlSAASPAoFZXJyb3IYBSABKAsyLS5kZXYuc3B5LmFnZW50LnYxLkNvbW1hbmRTdHJlYW1SZXNwb25zZS5FcnJvchoYCgVFcnJvchIPCgdtZXNzYWdlGAEgASgJQgoKCHJlc3BvbnNlIroCChRDb21tYW5kU3RyZWFtUmVxdWVzdBISCgpyZXF1ZXN0X2lkGAEgASgJEjoKC2dldF9zb3VyY2VzGAIgASgLMiMuZGV2LnNweS5hZ2VudC52MS5HZXRTb3VyY2VzUmVxdWVzdEgAEkUKEWdldF9zY3JpcHRfc291cmNlGAMgASgLMiguZGV2LnNweS5hZ2VudC52MS5HZXRTY3JpcHRTb3VyY2VSZXF1ZXN0SAASPAoMYWRkX2xvZ3BvaW50GAQgASgLMiQuZGV2LnNweS5hZ2VudC52MS5BZGRMb2dwb2ludFJlcXVlc3RIABJCCg9yZW1vdmVfbG9ncG9pbnQYBSABKAsyJy5kZXYuc3B5LmFnZW50LnYxLlJlbW92ZUxvZ3BvaW50UmVxdWVzdEgAQgkKB3JlcXVlc3QiEwoRR2V0U291cmNlc1JlcXVlc3QiQgoSR2V0U291cmNlc1Jlc3BvbnNlEiwKBWZpbGVzGAEgAygLMh0uZGV2LnNweS5zaGFyZWQudjEuU291cmNlRmlsZSIrChZHZXRTY3JpcHRTb3VyY2VSZXF1ZXN0EhEKCXNjcmlwdF9pZBgCIAEoCSIpChdHZXRTY3JpcHRTb3VyY2VSZXNwb25zZRIOCgZzb3VyY2UYASABKAkiQgoTTG9ncG9pbnRIaXRzUmVxdWVzdBIrCgNoaXQYASABKAsyHi5kZXYuc3B5LnNoYXJlZC52MS5Mb2dwb2ludEhpdCIWChRMb2dwb2ludEhpdHNSZXNwb25zZSI1ChJBZGRMb2dwb2ludFJlcXVlc3QSEQoJc2NyaXB0X2lkGAEgASgJEgwKBGxpbmUYAiABKAUiYgoTQWRkTG9ncG9pbnRSZXNwb25zZRIVCg1icmVha3BvaW50X2lkGAEgASgJEjQKD2FjdHVhbF9sb2NhdGlvbhgCIAEoCzIbLmRldi5zcHkuc2hhcmVkLnYxLkxvY2F0aW9uIi4KFVJlbW92ZUxvZ3BvaW50UmVxdWVzdBIVCg1icmVha3BvaW50X2lkGAEgASgJIhgKFlJlbW92ZUxvZ3BvaW50UmVzcG9uc2UyuQIKDkJhY2tlbmRTZXJ2aWNlElwKC0luaXRTZXNzaW9uEiQuZGV2LnNweS5hZ2VudC52MS5Jbml0U2Vzc2lvblJlcXVlc3QaJS5kZXYuc3B5LmFnZW50LnYxLkluaXRTZXNzaW9uUmVzcG9uc2UiABJhCgxMb2dwb2ludEhpdHMSJS5kZXYuc3B5LmFnZW50LnYxLkxvZ3BvaW50SGl0c1JlcXVlc3QaJi5kZXYuc3B5LmFnZW50LnYxLkxvZ3BvaW50SGl0c1Jlc3BvbnNlIgAoARJmCg1Db21tYW5kU3RyZWFtEicuZGV2LnNweS5hZ2VudC52MS5Db21tYW5kU3RyZWFtUmVzcG9uc2UaJi5kZXYuc3B5LmFnZW50LnYxLkNvbW1hbmRTdHJlYW1SZXF1ZXN0IgAoATABMpgDCgxBZ2VudFNlcnZpY2USWQoKR2V0U291cmNlcxIjLmRldi5zcHkuYWdlbnQudjEuR2V0U291cmNlc1JlcXVlc3QaJC5kZXYuc3B5LmFnZW50LnYxLkdldFNvdXJjZXNSZXNwb25zZSIAEmgKD0dldFNjcmlwdFNvdXJjZRIoLmRldi5zcHkuYWdlbnQudjEuR2V0U2NyaXB0U291cmNlUmVxdWVzdBopLmRldi5zcHkuYWdlbnQudjEuR2V0U2NyaXB0U291cmNlUmVzcG9uc2UiABJcCgtBZGRMb2dwb2ludBIkLmRldi5zcHkuYWdlbnQudjEuQWRkTG9ncG9pbnRSZXF1ZXN0GiUuZGV2LnNweS5hZ2VudC52MS5BZGRMb2dwb2ludFJlc3BvbnNlIgASZQoOUmVtb3ZlTG9ncG9pbnQSJy5kZXYuc3B5LmFnZW50LnYxLlJlbW92ZUxvZ3BvaW50UmVxdWVzdBooLmRldi5zcHkuYWdlbnQudjEuUmVtb3ZlTG9ncG9pbnRSZXNwb25zZSIAYgZwcm90bzM", [file_dev_spy_shared_v1_shared]);

/**
 * @generated from message dev.spy.agent.v1.InitSessionRequest
 */
export type InitSessionRequest = Message<"dev.spy.agent.v1.InitSessionRequest"> & {
  /**
   * @generated from field: string app_name = 1;
   */
  appName: string;

  /**
   * @generated from field: string agent_version = 2;
   */
  agentVersion: string;

  /**
   * @generated from field: repeated string argv = 3;
   */
  argv: string[];
};

/**
 * Describes the message dev.spy.agent.v1.InitSessionRequest.
 * Use `create(InitSessionRequestSchema)` to create a new message.
 */
export const InitSessionRequestSchema: GenMessage<InitSessionRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 0);

/**
 * @generated from message dev.spy.agent.v1.InitSessionResponse
 */
export type InitSessionResponse = Message<"dev.spy.agent.v1.InitSessionResponse"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;
};

/**
 * Describes the message dev.spy.agent.v1.InitSessionResponse.
 * Use `create(InitSessionResponseSchema)` to create a new message.
 */
export const InitSessionResponseSchema: GenMessage<InitSessionResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 1);

/**
 * client --> server responses
 *
 * @generated from message dev.spy.agent.v1.CommandStreamResponse
 */
export type CommandStreamResponse = Message<"dev.spy.agent.v1.CommandStreamResponse"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * @generated from oneof dev.spy.agent.v1.CommandStreamResponse.response
   */
  response: {
    /**
     * @generated from field: dev.spy.agent.v1.GetSourcesResponse get_sources = 2;
     */
    value: GetSourcesResponse;
    case: "getSources";
  } | {
    /**
     * @generated from field: dev.spy.agent.v1.GetScriptSourceResponse get_script_source = 3;
     */
    value: GetScriptSourceResponse;
    case: "getScriptSource";
  } | {
    /**
     * @generated from field: dev.spy.agent.v1.AddLogpointResponse add_logpoint = 4;
     */
    value: AddLogpointResponse;
    case: "addLogpoint";
  } | {
    /**
     * StreamLogpointHitsRequest stream_logpoint_hits = 4;
     *
     * @generated from field: dev.spy.agent.v1.RemoveLogpointResponse remove_logpoint = 6;
     */
    value: RemoveLogpointResponse;
    case: "removeLogpoint";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: dev.spy.agent.v1.CommandStreamResponse.Error error = 5;
   */
  error?: CommandStreamResponse_Error;
};

/**
 * Describes the message dev.spy.agent.v1.CommandStreamResponse.
 * Use `create(CommandStreamResponseSchema)` to create a new message.
 */
export const CommandStreamResponseSchema: GenMessage<CommandStreamResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 2);

/**
 * @generated from message dev.spy.agent.v1.CommandStreamResponse.Error
 */
export type CommandStreamResponse_Error = Message<"dev.spy.agent.v1.CommandStreamResponse.Error"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message dev.spy.agent.v1.CommandStreamResponse.Error.
 * Use `create(CommandStreamResponse_ErrorSchema)` to create a new message.
 */
export const CommandStreamResponse_ErrorSchema: GenMessage<CommandStreamResponse_Error> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 2, 0);

/**
 * server --> client requests
 *
 * @generated from message dev.spy.agent.v1.CommandStreamRequest
 */
export type CommandStreamRequest = Message<"dev.spy.agent.v1.CommandStreamRequest"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * @generated from oneof dev.spy.agent.v1.CommandStreamRequest.request
   */
  request: {
    /**
     * @generated from field: dev.spy.agent.v1.GetSourcesRequest get_sources = 2;
     */
    value: GetSourcesRequest;
    case: "getSources";
  } | {
    /**
     * @generated from field: dev.spy.agent.v1.GetScriptSourceRequest get_script_source = 3;
     */
    value: GetScriptSourceRequest;
    case: "getScriptSource";
  } | {
    /**
     * @generated from field: dev.spy.agent.v1.AddLogpointRequest add_logpoint = 4;
     */
    value: AddLogpointRequest;
    case: "addLogpoint";
  } | {
    /**
     * StreamLogpointHitsResponse stream_logpoint_hits = 4;
     *
     * @generated from field: dev.spy.agent.v1.RemoveLogpointRequest remove_logpoint = 5;
     */
    value: RemoveLogpointRequest;
    case: "removeLogpoint";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dev.spy.agent.v1.CommandStreamRequest.
 * Use `create(CommandStreamRequestSchema)` to create a new message.
 */
export const CommandStreamRequestSchema: GenMessage<CommandStreamRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 3);

/**
 * @generated from message dev.spy.agent.v1.GetSourcesRequest
 */
export type GetSourcesRequest = Message<"dev.spy.agent.v1.GetSourcesRequest"> & {
};

/**
 * Describes the message dev.spy.agent.v1.GetSourcesRequest.
 * Use `create(GetSourcesRequestSchema)` to create a new message.
 */
export const GetSourcesRequestSchema: GenMessage<GetSourcesRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 4);

/**
 * @generated from message dev.spy.agent.v1.GetSourcesResponse
 */
export type GetSourcesResponse = Message<"dev.spy.agent.v1.GetSourcesResponse"> & {
  /**
   * @generated from field: repeated dev.spy.shared.v1.SourceFile files = 1;
   */
  files: SourceFile[];
};

/**
 * Describes the message dev.spy.agent.v1.GetSourcesResponse.
 * Use `create(GetSourcesResponseSchema)` to create a new message.
 */
export const GetSourcesResponseSchema: GenMessage<GetSourcesResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 5);

/**
 * @generated from message dev.spy.agent.v1.GetScriptSourceRequest
 */
export type GetScriptSourceRequest = Message<"dev.spy.agent.v1.GetScriptSourceRequest"> & {
  /**
   * @generated from field: string script_id = 2;
   */
  scriptId: string;
};

/**
 * Describes the message dev.spy.agent.v1.GetScriptSourceRequest.
 * Use `create(GetScriptSourceRequestSchema)` to create a new message.
 */
export const GetScriptSourceRequestSchema: GenMessage<GetScriptSourceRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 6);

/**
 * @generated from message dev.spy.agent.v1.GetScriptSourceResponse
 */
export type GetScriptSourceResponse = Message<"dev.spy.agent.v1.GetScriptSourceResponse"> & {
  /**
   * @generated from field: string source = 1;
   */
  source: string;
};

/**
 * Describes the message dev.spy.agent.v1.GetScriptSourceResponse.
 * Use `create(GetScriptSourceResponseSchema)` to create a new message.
 */
export const GetScriptSourceResponseSchema: GenMessage<GetScriptSourceResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 7);

/**
 * @generated from message dev.spy.agent.v1.LogpointHitsRequest
 */
export type LogpointHitsRequest = Message<"dev.spy.agent.v1.LogpointHitsRequest"> & {
  /**
   * @generated from field: dev.spy.shared.v1.LogpointHit hit = 1;
   */
  hit?: LogpointHit;
};

/**
 * Describes the message dev.spy.agent.v1.LogpointHitsRequest.
 * Use `create(LogpointHitsRequestSchema)` to create a new message.
 */
export const LogpointHitsRequestSchema: GenMessage<LogpointHitsRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 8);

/**
 * @generated from message dev.spy.agent.v1.LogpointHitsResponse
 */
export type LogpointHitsResponse = Message<"dev.spy.agent.v1.LogpointHitsResponse"> & {
};

/**
 * Describes the message dev.spy.agent.v1.LogpointHitsResponse.
 * Use `create(LogpointHitsResponseSchema)` to create a new message.
 */
export const LogpointHitsResponseSchema: GenMessage<LogpointHitsResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 9);

/**
 * @generated from message dev.spy.agent.v1.AddLogpointRequest
 */
export type AddLogpointRequest = Message<"dev.spy.agent.v1.AddLogpointRequest"> & {
  /**
   * @generated from field: string script_id = 1;
   */
  scriptId: string;

  /**
   * @generated from field: int32 line = 2;
   */
  line: number;
};

/**
 * Describes the message dev.spy.agent.v1.AddLogpointRequest.
 * Use `create(AddLogpointRequestSchema)` to create a new message.
 */
export const AddLogpointRequestSchema: GenMessage<AddLogpointRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 10);

/**
 * @generated from message dev.spy.agent.v1.AddLogpointResponse
 */
export type AddLogpointResponse = Message<"dev.spy.agent.v1.AddLogpointResponse"> & {
  /**
   * @generated from field: string breakpoint_id = 1;
   */
  breakpointId: string;

  /**
   * @generated from field: dev.spy.shared.v1.Location actual_location = 2;
   */
  actualLocation?: Location;
};

/**
 * Describes the message dev.spy.agent.v1.AddLogpointResponse.
 * Use `create(AddLogpointResponseSchema)` to create a new message.
 */
export const AddLogpointResponseSchema: GenMessage<AddLogpointResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 11);

/**
 * @generated from message dev.spy.agent.v1.RemoveLogpointRequest
 */
export type RemoveLogpointRequest = Message<"dev.spy.agent.v1.RemoveLogpointRequest"> & {
  /**
   * @generated from field: string breakpoint_id = 1;
   */
  breakpointId: string;
};

/**
 * Describes the message dev.spy.agent.v1.RemoveLogpointRequest.
 * Use `create(RemoveLogpointRequestSchema)` to create a new message.
 */
export const RemoveLogpointRequestSchema: GenMessage<RemoveLogpointRequest> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 12);

/**
 * @generated from message dev.spy.agent.v1.RemoveLogpointResponse
 */
export type RemoveLogpointResponse = Message<"dev.spy.agent.v1.RemoveLogpointResponse"> & {
};

/**
 * Describes the message dev.spy.agent.v1.RemoveLogpointResponse.
 * Use `create(RemoveLogpointResponseSchema)` to create a new message.
 */
export const RemoveLogpointResponseSchema: GenMessage<RemoveLogpointResponse> = /*@__PURE__*/
  messageDesc(file_dev_spy_agent_v1_agent, 13);

/**
 * TODO: maybe all requests should run over the command stream?
 *
 * @generated from service dev.spy.agent.v1.BackendService
 */
export const BackendService: GenService<{
  /**
   * client to server requests  
   *
   * @generated from rpc dev.spy.agent.v1.BackendService.InitSession
   */
  initSession: {
    methodKind: "unary";
    input: typeof InitSessionRequestSchema;
    output: typeof InitSessionResponseSchema;
  },
  /**
   * @generated from rpc dev.spy.agent.v1.BackendService.LogpointHits
   */
  logpointHits: {
    methodKind: "client_streaming";
    input: typeof LogpointHitsRequestSchema;
    output: typeof LogpointHitsResponseSchema;
  },
  /**
   * server to client requests
   * buf:lint:ignore RPC_REQUEST_STANDARD_NAME
   * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
   *
   * @generated from rpc dev.spy.agent.v1.BackendService.CommandStream
   */
  commandStream: {
    methodKind: "bidi_streaming";
    input: typeof CommandStreamResponseSchema;
    output: typeof CommandStreamRequestSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dev_spy_agent_v1_agent, 0);

/**
 * This is only used for typescript definitions. The messages are actually sent
 * over the CommandStream.  This needs to be implemented by the agent.
 *
 * @generated from service dev.spy.agent.v1.AgentService
 */
export const AgentService: GenService<{
  /**
   * rpc GetAgentInfo(GetAgentInfoRequest) returns (GetAgentInfoResponse) {}
   *
   * @generated from rpc dev.spy.agent.v1.AgentService.GetSources
   */
  getSources: {
    methodKind: "unary";
    input: typeof GetSourcesRequestSchema;
    output: typeof GetSourcesResponseSchema;
  },
  /**
   * @generated from rpc dev.spy.agent.v1.AgentService.GetScriptSource
   */
  getScriptSource: {
    methodKind: "unary";
    input: typeof GetScriptSourceRequestSchema;
    output: typeof GetScriptSourceResponseSchema;
  },
  /**
   * @generated from rpc dev.spy.agent.v1.AgentService.AddLogpoint
   */
  addLogpoint: {
    methodKind: "unary";
    input: typeof AddLogpointRequestSchema;
    output: typeof AddLogpointResponseSchema;
  },
  /**
   * @generated from rpc dev.spy.agent.v1.AgentService.RemoveLogpoint
   */
  removeLogpoint: {
    methodKind: "unary";
    input: typeof RemoveLogpointRequestSchema;
    output: typeof RemoveLogpointResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dev_spy_agent_v1_agent, 1);

